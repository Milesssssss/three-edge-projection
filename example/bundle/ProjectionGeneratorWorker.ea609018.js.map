{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,ECAA,AAAA,EAAA,SAAA,QAAA,CAA8C,KAAK,KAAA,CAAM,+I,G,E,Q,C,Q,S,C,C,C,E,O,c,C,E,O,C,4B,C,I,I,E,I,K,E,W,C,E,a,C,C,G,I,E,E,SCEzD,IAAM,EAAO,2BACN,OAAM,EAEZ,aAAc,CAEb,IAAI,CAAC,OAAA,CAAU,CAAA,EACf,IAAI,CAAC,MAAA,CAAS,IAAI,OAAlB,EAAA,UACA,IAAI,CAAC,MAAA,CAAO,OAAA,CAAU,AAAA,IAErB,GAAK,EAAE,OAAA,CAEN,MAAM,AAAI,MAAO,CAAC,EAAG,EAAM,0CAA0C,EAAG,EAAE,OAAA,CAAS,CAAC,CAAC,CAIrF,OAAM,AAAI,MAAO,CAAC,EAAG,EAAM,8BAA8B,CAAC,CAI5D,CAED,CAEA,SAAU,CAAQ,CAAE,EAAU,CAAC,CAAC,CAAG,CAElC,GAAK,IAAI,CAAC,OAAA,CAET,MAAM,AAAI,MAAO,CAAC,EAAG,EAAM,sBAAsB,CAAC,EAInD,GAAK,AAAgB,OAAhB,IAAI,CAAC,MAAA,CAET,MAAM,AAAI,MAAO,CAAC,EAAG,EAAM,2BAA2B,CAAC,EAIxD,GAAM,CAAA,OAAE,CAAM,CAAE,CAAG,IAAI,CAGvB,OAFA,IAAI,CAAC,OAAA,CAAU,CAAA,EAER,IAAI,QAAS,CAAE,EAAS,KAE9B,EAAO,OAAA,CAAU,AAAA,IAEhB,EAAQ,AAAI,MAAO,CAAC,EAAG,EAAM,EAAE,EAAG,EAAE,OAAA,CAAS,CAAC,GAC9C,IAAI,CAAC,OAAA,CAAU,CAAA,CAEhB,EAEA,EAAO,SAAA,CAAY,AAAA,IAElB,IAAI,CAAC,OAAA,CAAU,CAAA,EACf,GAAM,CAAA,KAAE,CAAI,CAAE,CAAG,EAEjB,GAAK,EAAK,KAAA,CAET,EAAQ,AAAI,MAAO,EAAK,KAAxB,GACA,EAAO,SAAA,CAAY,UAEb,GAAK,EAAK,MAAA,CAAS,CAEzB,IAAM,EAAW,IAAI,EAAA,cAAa,CAClC,EAAS,YAAA,CAAc,WAAY,IAAI,EAAA,eAAc,CAAG,EAAK,MAAA,CAAQ,EAAG,CAAA,IACxE,EAAS,GACT,EAAO,SAAA,CAAY,IAEpB,MAAY,EAAQ,UAAA,EAEnB,EAAQ,UAAA,CAAY,EAAK,QAF1B,CAMD,EAEA,IAAM,EAAQ,EAAS,KAAA,CAAQ,EAAS,KAAA,CAAM,KAAA,CAAM,KAAA,GAAU,KACxD,EAAW,EAAS,UAAA,CAAW,QAAA,CAAS,KAAA,CAAM,KAApD,GACM,EAAW,CAAE,EAAS,MAAT,CAAiB,CAC/B,GAEJ,EAAS,IAAA,CAAM,EAAM,MAFtB,EAMA,EAAO,WAAA,CAAa,CACnB,MAAA,EACA,SAAA,EACA,QAAS,CACR,GAAG,CAAO,CACV,WAAY,KACZ,yBAA0B,CAAA,CAAS,EAAQ,UAA3C,AACD,CACD,EAAG,EAEJ,EAED,CAEA,SAAU,CAET,IAAI,CAAC,MAAA,CAAO,SAAZ,GACA,IAAI,CAAC,MAAA,CAAS,IAEf,CAED,C,G,E,Q,C,Q,S,C,C,C,E,I,E,E,SCzGA,IAAI,EAAA,IAAA,IAA0B,AAAA,EAAA,SAAA,OAAA,CAA6C,SAA3E,YAAA,GAAA,CACA,CAAA,EAAA,OAAA,CAAiB,EAAU,EAAI,QAAA,GAAY,EAAI,MAAA,CAAQ,CAAA,E,G,E,Q,C,Q,S,C,C,C,ECAvD,EAAA,OAAA,CAAiB,SAAU,CAAS,CAAE,CAAM,CAAE,CAAK,EACjD,GAAI,IAAW,KAAK,QAAA,CAAS,MAAA,CAG3B,OAAO,EAGP,IAAI,EAAS,EAAQ,UAAY,KAAK,SAAA,CAAU,GAAa,IAAM,iBAAmB,KAAK,SAAA,CAAU,GAAa,KAClH,OAAO,IAAI,eAAA,CAAgB,IAAI,KAAK,CAAC,EAAO,CAAE,CAC5C,KAAM,wBACR,GAEJ,C,G,E","sources":["<anon>","node_modules/@parcel/runtime-js/lib/runtime-754d191e2f8d381f.js","src/worker/ProjectionGeneratorWorker.js","node_modules/@parcel/runtime-js/lib/runtime-7569578f85288298.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6c98\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6c98\"] = parcelRequire;\n}\nparcelRequire.register(\"lW1mY\", function(module, exports) {\n\n(parcelRequire(\"27Lyk\")).register(JSON.parse('{\"e71zk\":\"ProjectionGeneratorWorker.ea609018.js\",\"8zbCD\":\"projectionAsync.worker.28971622.js\",\"eKrmh\":\"projectionAsync.worker.fe0330c9.js\"}'));\n\n});\n\nparcelRequire.register(\"7Uvhf\", function(module, exports) {\n\n$parcel$export(module.exports, \"ProjectionGeneratorWorker\", () => $5c260663d40074f0$export$58847e466a6b9214);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $5c260663d40074f0$var$NAME = \"ProjectionGeneratorWorker\";\n\nclass $5c260663d40074f0$export$58847e466a6b9214 {\n    constructor(){\n        this.running = false;\n        this.worker = new Worker((parcelRequire(\"j7hDQ\")));\n        this.worker.onerror = (e)=>{\n            if (e.message) throw new Error(`${$5c260663d40074f0$var$NAME}: Could not create Web Worker with error \"${e.message}\"`);\n            else throw new Error(`${$5c260663d40074f0$var$NAME}: Could not create Web Worker.`);\n        };\n    }\n    generate(geometry, options = {}) {\n        if (this.running) throw new Error(`${$5c260663d40074f0$var$NAME}: Already running job.`);\n        if (this.worker === null) throw new Error(`${$5c260663d40074f0$var$NAME}: Worker has been disposed.`);\n        const { worker: worker } = this;\n        this.running = true;\n        return new Promise((resolve, reject)=>{\n            worker.onerror = (e)=>{\n                reject(new Error(`${$5c260663d40074f0$var$NAME}: ${e.message}`));\n                this.running = false;\n            };\n            worker.onmessage = (e)=>{\n                this.running = false;\n                const { data: data } = e;\n                if (data.error) {\n                    reject(new Error(data.error));\n                    worker.onmessage = null;\n                } else if (data.result) {\n                    const geometry = new (0, $ilwiq.BufferGeometry)();\n                    geometry.setAttribute(\"position\", new (0, $ilwiq.BufferAttribute)(data.result, 3, false));\n                    resolve(geometry);\n                    worker.onmessage = null;\n                } else if (options.onProgress) options.onProgress(data.progress);\n            };\n            const index = geometry.index ? geometry.index.array.slice() : null;\n            const position = geometry.attributes.position.array.slice();\n            const transfer = [\n                position.buffer\n            ];\n            if (index) transfer.push(index.buffer);\n            worker.postMessage({\n                index: index,\n                position: position,\n                options: {\n                    ...options,\n                    onProgress: null,\n                    includedProgressCallback: Boolean(options.onProgress)\n                }\n            }, transfer);\n        });\n    }\n    dispose() {\n        this.worker.terminate();\n        this.worker = null;\n    }\n}\n\n});\nparcelRequire.register(\"j7hDQ\", function(module, exports) {\n\nvar $7ryUf = parcelRequire(\"7ryUf\");\n\nlet $deac5b03489e8ef8$var$url = new URL((parcelRequire(\"27Lyk\")).resolve(\"8zbCD\"), import.meta.url);\nmodule.exports = $7ryUf($deac5b03489e8ef8$var$url.toString(), $deac5b03489e8ef8$var$url.origin, true);\n\n});\nparcelRequire.register(\"7ryUf\", function(module, exports) {\n\"use strict\";\nmodule.exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n});\n\n\n\n\nparcelRequire(\"lW1mY\");\n\n//# sourceMappingURL=ProjectionGeneratorWorker.ea609018.js.map\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"e71zk\\\":\\\"ProjectionGeneratorWorker.ea609018.js\\\",\\\"8zbCD\\\":\\\"projectionAsync.worker.28971622.js\\\",\\\"eKrmh\\\":\\\"projectionAsync.worker.fe0330c9.js\\\"}\"));","import { BufferAttribute, BufferGeometry } from 'three';\n\nconst NAME = 'ProjectionGeneratorWorker';\nexport class ProjectionGeneratorWorker {\n\n\tconstructor() {\n\n\t\tthis.running = false;\n\t\tthis.worker = new Worker( new URL( './projectionAsync.worker.js', import.meta.url ), { type: 'module' } );\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ NAME }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ NAME }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tgenerate( geometry, options = {} ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( `${ NAME }: Already running job.` );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( `${ NAME }: Worker has been disposed.` );\n\n\t\t}\n\n\t\tconst { worker } = this;\n\t\tthis.running = true;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `${ NAME }: ${ e.message }` ) );\n\t\t\t\tthis.running = false;\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tthis.running = false;\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.result ) {\n\n\t\t\t\t\tconst geometry = new BufferGeometry();\n\t\t\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( data.result, 3, false ) );\n\t\t\t\t\tresolve( geometry );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array.slice() : null;\n\t\t\tconst position = geometry.attributes.position.array.slice();\n\t\t\tconst transfer = [ position.buffer ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransfer.push( index.buffer );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t},\n\t\t\t}, transfer );\n\n\t\t} );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8zbCD\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","JSON","parse","Object","defineProperty","get","$5c260663d40074f0$export$58847e466a6b9214","set","s","enumerable","configurable","$ilwiq","$5c260663d40074f0$var$NAME","constructor","running","worker","Worker","onerror","e","message","generate","geometry","options","Promise","resolve","reject","onmessage","data","error","result","BufferGeometry","setAttribute","BufferAttribute","onProgress","progress","index","array","slice","position","attributes","transfer","buffer","push","postMessage","includedProgressCallback","Boolean","dispose","terminate","$7ryUf","$deac5b03489e8ef8$var$url","URL","url","toString","origin","workerUrl","isESM","location","source","stringify","createObjectURL","Blob","type"],"version":3,"file":"ProjectionGeneratorWorker.ea609018.js.map"}